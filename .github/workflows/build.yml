name: Build Executable

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

permissions:
  contents: write  # Required for creating releases

jobs:
  build-windows:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Build for Windows
      env:
        GOOS: windows
        GOARCH: amd64
        CGO_ENABLED: 0
      run: |
        go build -v -ldflags="-s -w" -o vaobs.exe .
        
    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: vaobs-windows-executable
        path: vaobs.exe
        retention-days: 30
        
    - name: Create release on tag
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        FILE_SIZE=$(du -h vaobs.exe | cut -f1)
        cat > release_notes.md << EOF
        Release $TAG_NAME
        VaOBS is a tool to capture a video playing inside of VRChat directly from OBS.

        It's recommended to record VRChat's audio on a different track then the Media Source track in OBS, so you can shift the audio in post-processing if needed.

        OBS Settings:
        * Setup a Media Source in OBS, default name is "VRChatFeed"

        \`OBS > Tools > WebSocket Server Settings\`
        * Enable WebSocket server
        * Enable Authentication
        * Show Connection Info

        Usage:
        Download the vaobs.exe file and run it directly on Windows in cmd. Use \`--help\` to see available commands.
        
        \`\`\`shell
        vaobs.exe --help
        #Usage of vaobs.exe:
        #  -additional-settings string
        #        Additional input settings in format key1=value1,key2=value2 (default "hw_decode=true,close_when_inactive=true")
        #  -input-name string
        #        OBS input source name (default "VRChatFeed")
        #  -obs-host string
        #        OBS WebSocket host (default "localhost")
        #  -obs-password string
        #        OBS WebSocket password
        #  -obs-port int
        #        OBS WebSocket port (default 4455)
        \`\`\`
        EOF
        gh release create "$TAG_NAME" vaobs.exe \
          --title "VaOBS $TAG_NAME" \
          --notes-file release_notes.md \
          --verify-tag
